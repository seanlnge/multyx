/// <reference types="node" />
import { Client, Input, Controller, ControllerState } from './client';
import { Update } from './update';
import { MultyxValue, MultyxObject, MultyxTeam } from './multyx';
import { Server } from 'http';
import { Events, Options, RawObject } from './types';
export { Client, Input, Controller, ControllerState, MultyxValue, MultyxObject, MultyxTeam, MultyxServer, Events, Options, RawObject };
declare class MultyxServer {
    tps: number;
    events: Events;
    all: MultyxTeam;
    updates: Map<Client, Update[]>;
    lastFrame: number;
    deltaTime: number;
    constructor(server: Server, options?: Options);
    on<K extends keyof Events>(event: K, callback: Events[K]): void;
    private initializeClient;
    private parseNativeMessage;
    private parseEditUpdate;
    editUpdate(value: MultyxObject | MultyxValue, clients: Set<Client>): void;
    private addOperation;
    private sendUpdates;
}
